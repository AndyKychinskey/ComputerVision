# -*- coding: utf-8 -*-
"""CV_HomeWork_10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Uxt0aQPAdoQJEFSp1qVHoHqp2UG5inqP
"""

import os
import cv2
import numpy as np
from matplotlib import pyplot as plt

# Let's assume the detector has detected an object
x1, y1 = 350, 460
x2, y2 = 650, 1200
width = x2 - x1
height = y2 - y1

# video data
data = "/content/drive/MyDrive/CV_Video_L10/test_video.MOV"

# Set up tracker
tracker_types = ['MIL','KCF', 'CSRT']
tracker_type = tracker_types[0]

if tracker_type == 'MIL':
    tracker = cv2.TrackerMIL_create()

if tracker_type == 'KCF':
    tracker = cv2.TrackerKCF_create()

if tracker_type == "CSRT":
    tracker = cv2.TrackerCSRT_create()

# Generate tracking template
# Define a video capture object
vid = cv2.VideoCapture(data)
ret, frame = vid.read()

result_frame = cv2.rotate(cv2.cvtColor(cv2.cvtColor(frame, cv2.COLOR_BGR2RGB), cv2.COLOR_RGB2GRAY), cv2.ROTATE_90_CLOCKWISE)
#result_frame = cv2.rotate(frame, cv2.ROTATE_90_CLOCKWISE)

# Initialize tracker
bbox = (x1, y1, width, height)
ok = tracker.init(result_frame, bbox)
idx, img_num = 0, 0

while True:
    ret, frame = vid.read()
    if ret:
        result_frame = cv2.rotate(cv2.cvtColor(cv2.cvtColor(frame, cv2.COLOR_BGR2RGB), cv2.COLOR_RGB2GRAY), cv2.ROTATE_90_CLOCKWISE)
        #result_frame = cv2.rotate(frame, cv2.ROTATE_90_CLOCKWISE)
        ok, bbox = tracker.update(result_frame)
        # Show the tracker working
        x1, y1 = bbox[0], bbox[1]
        width, height = bbox[2], bbox[3]

        if not idx % 100:
            cv2.rectangle(result_frame, (int(x1), int(y1)), (int(x1+width), int(y1+height)), (0, 255, 0), 2)
            cv2.imwrite(os.path.join('/content/drive/MyDrive/CV_Video_L10/results', 'f' + str(img_num) + '.PNG'), result_frame)
            img_num += 1
        idx += 1
    else:
      print("End of video")
      break

vid.release()
